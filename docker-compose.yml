version: "3"
services:
    frontend:
        build: .
        image: frontend
        container_name: frontend
        ports:
            - "3000:3000"
        expose:
            - "3000"
        environment:
            API_HOST: ${API_HOST}
        command: npm start
        volumes:
            - "./frontend:/app"
        depends_on:
            - auth_gateway
        links:
            - auth_gateway

    auth_gateway:
        build: .
        image: auth_gateway
        container_name: auth_gateway
        ports:
            - "8080:8080"
        expose:
            - "8080"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${POSTGRES_DB}
            PGHOST: psg
        command: npm start
        volumes:
            - "./auth_gateway:/app"
        depends_on:
            - db
        links:
            - db

    db:
        image: postgres:latest
        container_name: psg
        ports:
            - "5432:5432"
        expose:
            - "5432"
        restart: always
        volumes:
            - "/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST_AUTH_METHOD: trust
