version: "3"
services:
    frontend:
        build: .
        image: frontend
        container_name: frontend
        ports:
            - "3000:3000"
        expose:
            - "3000"
        environment:
            API_HOST: ${API_HOST}
        command: npm start
        volumes:
            - "./frontend:/app"
        depends_on:
            - auth_gateway
        links:
            - auth_gateway

    auth_gateway:
        build: .
        image: auth_gateway
        container_name: auth_gateway
        ports:
            - "8080:8080"
        expose:
            - "8080"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${AUTH_PGDATABASE}
            PGHOST: psg
        command: npm start
        volumes:
            - "./auth_gateway:/app"
        depends_on:
            - db
        links:
            - catalog
            - marketplace
            - shipping
            - wallet

    marketplace:
        build: .
        image: marketplace
        container_name: marketplace
        expose:
            - "8081"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${MARKETPLACE_PGDATABASE}
            PGHOST: psg
        command: npm start
        volumes:
            - "./marketplace:/app"
        depends_on:
            - db
        links:
            - catalog
            - wallet


    wallet:
        build: .
        image: wallet
        container_name: wallet
        expose:
            - "8082"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${WALLET_PGDATABASE}
            PGHOST: psg
        command: npm start
        volumes:
            - "./wallet:/app"
        depends_on:
            - db

    catalog:
        build: .
        image: catalog
        container_name: catalog
        expose:
            - "8083"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${CATALOG_PGDATABASE}
            PGHOST: psg
        command: npm start
        volumes:
            - "./catalog:/app"
        depends_on:
            - db

    shipping:
        build: .
        image: shipping
        container_name: shipping
        expose:
            - "8084"
        environment:
            PGUSER: ${POSTGRES_USER}
            PGPASSWORD: ${POSTGRES_PASSWORD}
            PGDATABASE: ${SHIPPING_PGDATABASE}
            PGHOST: psg
        command: npm start
        volumes:
            - "./shipping:/app"
        depends_on:
            - db
        links:
            - marketplace

    auction_daemon:
        build: .
        image: auction_daemon
        container_name: auction_daemon
        environment:
            NAME: auction_daemon
            CATALOG_ENDPOINT:  catalog
            SHIPPING_ENDPOINT: shipping
            WALLET_ENDPOINT: wallet
            MARKETPLACE_ENDPOINT: marketplace
        command: python -u src/main.py
        volumes:
            - "./auction_daemon:/app"
        depends_on:
            - db
        links:
            - catalog
            - marketplace
            - shipping
            - wallet

    db:
        image: postgres:latest
        container_name: psg
        ports:
            - "5432:5432"
        expose:
            - "5432"
        restart: always
        volumes:
            - "/var/run/postgres/postgres.sock:/var/run/postgres/postgres.sock"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST_AUTH_METHOD: trust
